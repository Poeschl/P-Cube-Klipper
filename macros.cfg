# Own Macros

# Start / End Macros

[gcode_macro _START_PRINT]
description: Executes the start up procedure before the print
gcode:
 {% set first_layer_bed = params.FIRST_LAYER_BED | int %}
 {% set first_layer_ext = params.FIRST_LAYER_EXT | int %}

  G28 ;Home Axes
  {% set was_preheated = printer.heater_bed.temperature < first_layer_bed * 0.8 %}
  M140 S{first_layer_bed}
  G90 ;Ensure absolute
  G21 ;Ensure mm
  G1 Z20
  M190 S{first_layer_bed}
  {% if not was_preheated %}
    G4 S60 ;Wait for heated bed
  {% else %}
    { action_respond_info('Halving bed heat up time') }
  {% endif %}
  TIMELAPSE_TAKE_FRAME
  M104 S{first_layer_ext}
  G4 S60 ;Wait for heated bed again
  M109 S{first_layer_ext}
  G28 ;Home Axes
  Z_TILT_ADJUST
  BED_MESH_CALIBRATE
  PRINT_WIPE_LINE

[gcode_macro _END_PRINT]
description: Executes the ending procedure after a print
gcode:
  {% set end_x = (range(5, 260) | random) %}
  {% set end_y = (range(270, 285) | random) %}
  { action_respond_info('Park point: X' + (end_x | string) + ' Y' + (end_y | string)) }

  TURN_OFF_HEATERS
  M107
  BED_MESH_CLEAR
  G92 E0
  G0 E-4 F500
  G0 X{end_x} Y{end_y} F15000
  G0 Z200 F15000
  M18 XYE
  UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK_ACT DURATION=180 # Checks for Power off after 3 minutes

[gcode_macro PRINT_WIPE_LINE]
description: Prints a wipe line to clean the nozzle at the start of the print
gcode:
  {% set start_line_x = (range(5, 20) | random) %}
  {% set start_line_y = (range(5, 15) | random) %}
  { action_respond_info('Start point: X' + (start_line_x | string) + ' Y' + (start_line_y | string)) }

  SAVE_GCODE_STATE NAME=wipe_line_state
  G92 E0 ;Reset extruder
  G0 X{start_line_x} Y{start_line_y} Z10 F9000
  M400
  ;Make wipe Line
  M83 ; Relative extruder mode
  G1 Z0.15 ; Go to print hight
  G1 X20.0 E5  F1000.0 ; fat 20mm intro line @ 0.30
  G1 X60.0 E3.2  F1000.0 ; thin +40mm intro line @ 0.08
  G1 X100.0 E5  F1000.0 ; fat +40mm intro line @ 0.15
  G1 E-0.8 F3000; retract to avoid stringing
  G1 X99.5 E0 F1000.0 ; -0.5mm wipe action to avoid string
  G1 X110.0 E0 F1000.0 ; +10mm intro line @ 0.00
  G1 E0.6 F1500; de-retract
  RESTORE_GCODE_STATE NAME=wipe_line_state

# Debug

[gcode_macro SEARCH_VARS]
description: This macro will allow you to type SEARCH_VARS S={some word} from the terminal and it will respond with all of the matching items in the printer object.
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}

# Auto Power Off
# Adapted from https://github.com/tinntbg/auto-power-off-klipper

[gcode_macro _POWER_OFF_PRINTER]
description: Powers down the printer
gcode:
  {action_call_remote_method("set_device_power", device="printer", state="off")}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode:
  {% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
    {% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
        {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            _POWER_OFF_PRINTER
        {% else %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
        {% endif %}
    {% else %}
        {% if printer.idle_timeout.state == "Printing" %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
        {% else %}
            {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
            {% else %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            {% endif %}
        {% endif %}
    {% endif %}
  {% endif %}